"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const create_api_client_1 = require("./create-api-client");
const create_debugging_protocol_client_1 = require("./create-debugging-protocol-client");
const create_http_client_1 = require("./create-http-client");
const create_tmpdir_1 = require("./create-tmpdir");
const disposables_1 = require("./disposables");
const open_web_socket_1 = require("./open-web-socket");
const resolve_browser_1 = require("./resolve-browser");
const spawn_browser_1 = require("./spawn-browser");
function createSession(cb) {
    return __awaiter(this, void 0, void 0, function* () {
        const session = new Session();
        try {
            return yield cb(session);
        }
        finally {
            yield session.dispose();
        }
    });
}
exports.createSession = createSession;
function createSessions(count, cb) {
    return __awaiter(this, void 0, void 0, function* () {
        const disposables = new disposables_1.default();
        const sessions = [];
        try {
            while (count--) {
                const session = new Session();
                disposables.add(session);
                sessions.push(session);
            }
            return yield cb(sessions);
        }
        finally {
            yield disposables.dispose();
        }
    });
}
exports.createSessions = createSessions;
class Session {
    constructor() {
        this.disposables = new disposables_1.default();
    }
    spawnBrowser(browserType, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const browser = resolve_browser_1.default(browserType, options);
            const tmpDir = yield create_tmpdir_1.default();
            this.disposables.add(tmpDir);
            const process = yield spawn_browser_1.default(browser.executablePath, tmpDir.path, browser.isContentShell, options);
            this.disposables.add(process);
            return process;
        });
    }
    createAPIClient(host, port) {
        return create_api_client_1.default(create_http_client_1.default(host, port));
    }
    openDebuggingProtocol(webSocketDebuggerUrl) {
        return __awaiter(this, void 0, void 0, function* () {
            const debuggingProtocol = create_debugging_protocol_client_1.default();
            const connection = yield open_web_socket_1.default(webSocketDebuggerUrl, debuggingProtocol);
            this.disposables.add(connection);
            return debuggingProtocol;
        });
    }
    dispose() {
        return this.disposables.dispose();
    }
}
//# sourceMappingURL=create-session.js.map