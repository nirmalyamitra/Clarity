"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_1 = require("os");
const path_1 = require("path");
const rimraf = require("rimraf");
/* tslint:disable:no-var-requires */
const mktemp = require("mktemp");
/* tslint:enable:no-var-requires */
function createTmpDir() {
    return __awaiter(this, void 0, void 0, function* () {
        const templatePath = path_1.join(os_1.tmpdir(), "tmpXXXXXX");
        const path = yield new Promise((resolve, reject) => {
            mktemp.createDir(templatePath, (e, p) => e ? reject(e) : resolve(p));
        });
        function dispose() {
            return new Promise((resolve, reject) => {
                rimraf(path, (e) => e ? reject(e) : resolve());
            }).catch((e) => {
                /* tslint:disable:no-console */
                console.error(e);
                /* tslint:enable:no-console */
            });
        }
        return { path, dispose };
    });
}
exports.default = createTmpDir;
//# sourceMappingURL=create-tmpdir.js.map